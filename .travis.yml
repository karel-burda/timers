stages:
  - example (C++11) -- build (linux, gcc4)
  - example (C++14) -- cppcheck, build (linux, gcc5), valgrind
  - tests (C++14) -- cppcheck, build (osx, clang8), run

jobs:
  include:
    - stage: example (C++11) -- build (linux, gcc4)
      language: cpp
      compiler: gcc
      os: linux
      script:
        - set -e
        - cmake -Bbuild -H. -DEXAMPLE-CPP11:BOOL=ON DEXAMPLE:BOOL=OFF -DUNIT-TESTS:BOOL=OFF -DCMAKE_BUILD_TYPE:STRING=Release
        - cmake --build ./build --target example-cpp11 --config
        - set +e

    - stage: example (C++14) -- cppcheck, build (linux, gcc5), valgrind
      sudo: required
      dist: trusty
      language: cpp
      compiler: g++
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      before_install:
        - sudo apt-get update -qq
        - sudo apt-get -y install valgrind cppcheck
      install: export CXX="g++-5"
      script:
        - cppcheck --enable=all -I include --check-config  -v ./example
        - set -e
        - cmake -Bbuild -H. -DEXAMPLE:BOOL=ON -DUNIT-TESTS:BOOL=OFF -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
        - cmake --build ./build --target example --config RelWithDebInfo
        -  valgrind --leak-check=full --error-exitcode=255 -v ./build/bin/example
        - set +e

    - stage: tests (C++14) -- cppcheck, build (osx, clang8), run
      language: cpp
      compiler: clang
      os: osx
      env: GTEST_COLOR=1
      before_install:
        - brew update
        - brew install cppcheck
      script:
        - set -e
        - cppcheck --enable=all -I include -I tests/unit/include/ --check-config  -v ./tests/unit/
        - cmake -Bbuild -H. -DEXAMPLE:BOOL=OFF -DUNIT-TESTS:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release
        - cmake --build ./build --target run-all-tests-verbose --config Release
        - set +e
